// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package shop

import (
	"context"

	"looklook/app/shop/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Goods     = pb.Goods
	GoodsReq  = pb.GoodsReq
	GoodsResp = pb.GoodsResp

	Shop interface {
		Greet(ctx context.Context, in *GoodsReq, opts ...grpc.CallOption) (*GoodsResp, error)
	}

	defaultShop struct {
		cli zrpc.Client
	}
)

func NewShop(cli zrpc.Client) Shop {
	return &defaultShop{
		cli: cli,
	}
}

func (m *defaultShop) Greet(ctx context.Context, in *GoodsReq, opts ...grpc.CallOption) (*GoodsResp, error) {
	client := pb.NewShopClient(m.cli.Conn())
	return client.Greet(ctx, in, opts...)
}
