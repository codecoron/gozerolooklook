// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package shop

import (
	"context"

	"looklook/app/shop/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Goods         = pb.Goods
	GoodsListReq  = pb.GoodsListReq
	GoodsListResp = pb.GoodsListResp
	GoodsReq      = pb.GoodsReq
	GoodsResp     = pb.GoodsResp

	Shop interface {
		GetGoodsById(ctx context.Context, in *GoodsReq, opts ...grpc.CallOption) (*GoodsResp, error)
		GetGoodsList(ctx context.Context, in *GoodsListReq, opts ...grpc.CallOption) (*GoodsListResp, error)
	}

	defaultShop struct {
		cli zrpc.Client
	}
)

func NewShop(cli zrpc.Client) Shop {
	return &defaultShop{
		cli: cli,
	}
}

func (m *defaultShop) GetGoodsById(ctx context.Context, in *GoodsReq, opts ...grpc.CallOption) (*GoodsResp, error) {
	client := pb.NewShopClient(m.cli.Conn())
	return client.GetGoodsById(ctx, in, opts...)
}

func (m *defaultShop) GetGoodsList(ctx context.Context, in *GoodsListReq, opts ...grpc.CallOption) (*GoodsListResp, error) {
	client := pb.NewShopClient(m.cli.Conn())
	return client.GetGoodsList(ctx, in, opts...)
}
